/* Generated By:JavaCC: Do not edit this line. GWikiScannerTokenManager.java */
/*******************************************************************************
 * Copyright (c) 2005,2007 Cognium Systems SA and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Apache License, Version 2.0
 * which accompanies this distribution, and is available at
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Contributors:
 *     Cognium Systems SA - initial API and implementation
 *******************************************************************************/
package org.wikimodel.wem.gwiki.javacc;

public class GWikiScannerTokenManager implements GWikiScannerConstants
{
  int verbatimBlockDepth = 0;
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_1(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x200000000000000L) != 0L)
         {
            jjmatchedKind = 72;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x200000000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 72;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa1_1(0x200000000000000L);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa2_1(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private final int jjMoveStringLiteralDfa2_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 123:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStopAtPos(2, 57);
         break;
      default :
         break;
   }
   return jjStartNfa_1(1, active0);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_1(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 104;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAdd(76);
                  }
                  else if ((0xfc00fffe00000000L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAddStates(0, 4);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAdd(75);
                  }
                  if (curChar == 13)
                     jjAddStates(5, 9);
                  else if (curChar == 61)
                     jjCheckNAddStates(10, 12);
                  else if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 42)
                  {
                     if (kind > 67)
                        kind = 67;
                  }
                  if (curChar == 61)
                  {
                     if (kind > 64)
                        kind = 64;
                  }
                  break;
               case 1:
                  if (kind > 58)
                     kind = 58;
                  break;
               case 4:
               case 5:
                  jjCheckNAddStates(13, 15);
                  break;
               case 7:
               case 79:
                  if (curChar == 61 && kind > 64)
                     kind = 64;
                  break;
               case 12:
               case 13:
                  jjCheckNAddStates(16, 18);
                  break;
               case 15:
                  if (curChar == 42 && kind > 67)
                     kind = 67;
                  break;
               case 18:
                  if (curChar == 44 && kind > 67)
                     kind = 67;
                  break;
               case 19:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if ((0x3ff680000000000L & l) != 0L)
                     jjAddStates(19, 20);
                  break;
               case 22:
                  if (curChar == 58)
                     jjAddStates(21, 24);
                  break;
               case 23:
                  if (curChar != 47)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(25, 32);
                  break;
               case 24:
                  if ((0x2fff7fd200000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 25:
                  if (curChar == 37)
                     jjCheckNAdd(26);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 29:
                  if (curChar == 37)
                     jjCheckNAdd(30);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(36, 41);
                  break;
               case 32:
                  if ((0x2bff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(36, 41);
                  break;
               case 33:
                  if (curChar == 58)
                     jjCheckNAdd(34);
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(42, 45);
                  break;
               case 35:
                  if (curChar != 47)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(46, 50);
                  break;
               case 36:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(46, 50);
                  break;
               case 39:
                  if ((0x2fff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(46, 50);
                  break;
               case 40:
                  if (curChar != 63)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(51, 53);
                  break;
               case 41:
                  if ((0xafffffd200000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(51, 53);
                  break;
               case 42:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(51, 53);
                  break;
               case 45:
                  if (curChar != 35)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 46:
                  if ((0xafffffd200000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 47:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 50:
                  if (curChar == 37)
                     jjCheckNAddTwoStates(26, 30);
                  break;
               case 51:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 52:
                  if (curChar != 47)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(54, 57);
                  break;
               case 53:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(58, 62);
                  break;
               case 56:
                  if ((0x2fff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(58, 62);
                  break;
               case 57:
                  if (curChar != 47)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(63, 67);
                  break;
               case 58:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(63, 67);
                  break;
               case 61:
                  if ((0x2fff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(63, 67);
                  break;
               case 62:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(65, 68);
                  break;
               case 65:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(68, 72);
                  break;
               case 68:
                  if ((0x2bff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(68, 72);
                  break;
               case 69:
                  if (curChar != 47)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(73, 77);
                  break;
               case 70:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(73, 77);
                  break;
               case 73:
                  if ((0x2fff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(73, 77);
                  break;
               case 74:
                  if ((0x2fff7fd200000000L & l) != 0L)
                     jjCheckNAddTwoStates(65, 68);
                  break;
               case 75:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAdd(75);
                  break;
               case 76:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAdd(76);
                  break;
               case 77:
                  if ((0xfc00fffe00000000L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 78:
                  if (curChar == 61)
                     jjCheckNAddStates(10, 12);
                  break;
               case 80:
               case 82:
                  if (curChar == 61)
                     jjCheckNAdd(79);
                  break;
               case 81:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 83:
                  if (curChar == 13)
                     jjAddStates(5, 9);
                  break;
               case 84:
                  if (curChar == 10)
                     jjCheckNAdd(85);
                  break;
               case 85:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(85, 86);
                  break;
               case 86:
                  if ((0x40800000000L & l) != 0L)
                     jjCheckNAdd(87);
                  break;
               case 87:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  jjCheckNAdd(87);
                  break;
               case 88:
                  if (curChar == 10)
                     jjCheckNAdd(90);
                  break;
               case 91:
                  if (curChar == 10)
                     jjCheckNAdd(92);
                  break;
               case 92:
                  if (curChar == 35)
                     jjCheckNAdd(93);
                  break;
               case 93:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddTwoStates(93, 94);
                  break;
               case 94:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAdd(94);
                  break;
               case 95:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(96, 97);
                  break;
               case 96:
               case 98:
                  if (curChar == 61 && kind > 62)
                     kind = 62;
                  break;
               case 97:
                  if (curChar == 61)
                     jjCheckNAddStates(78, 80);
                  break;
               case 99:
               case 101:
                  if (curChar == 61)
                     jjCheckNAdd(98);
                  break;
               case 100:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 102:
                  if (curChar == 10 && kind > 69)
                     kind = 69;
                  break;
               case 103:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAddStates(0, 4);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffffffffffeL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  else if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 16;
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 8;
                  if ((0x87fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAdd(76);
                  }
                  else if ((0x78000001f8000001L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                  }
                  if ((0xc0000000L & l) != 0L)
                  {
                     if (kind > 67)
                        kind = 67;
                  }
                  else if (curChar == 96)
                     jjCheckNAddStates(16, 18);
                  else if (curChar == 91)
                     jjCheckNAddStates(13, 15);
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (kind > 58)
                     kind = 58;
                  break;
               case 2:
                  if (curChar == 91)
                     jjCheckNAddStates(13, 15);
                  break;
               case 3:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  jjCheckNAddStates(13, 15);
                  break;
               case 5:
                  if ((0xffffffffdfffffffL & l) != 0L)
                     jjCheckNAddStates(13, 15);
                  break;
               case 6:
                  if (curChar == 93 && kind > 63)
                     kind = 63;
                  break;
               case 8:
                  if (curChar == 124 && kind > 65)
                     kind = 65;
                  break;
               case 9:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 96)
                     jjCheckNAddStates(16, 18);
                  break;
               case 11:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  jjCheckNAddStates(16, 18);
                  break;
               case 13:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     jjCheckNAddStates(16, 18);
                  break;
               case 14:
                  if (curChar == 96 && kind > 66)
                     kind = 66;
                  break;
               case 15:
                  if ((0xc0000000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 16:
                  if (curChar == 126 && kind > 67)
                     kind = 67;
                  break;
               case 17:
                  if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 20:
               case 21:
                  if ((0x7fffffffffffffeL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  break;
               case 24:
                  if ((0x47fffffffffffffeL & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 27:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 28:
                  if (curChar != 64)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(36, 41);
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(36, 41);
                  break;
               case 32:
                  if ((0x47fffffffffffffeL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(36, 41);
                  break;
               case 37:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(46, 50);
                  break;
               case 39:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(46, 50);
                  break;
               case 41:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(51, 53);
                  break;
               case 43:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 44:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(51, 53);
                  break;
               case 46:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 48:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 54:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 55:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(58, 62);
                  break;
               case 56:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(58, 62);
                  break;
               case 59:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 60:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(63, 67);
                  break;
               case 61:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(63, 67);
                  break;
               case 63:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(65, 68);
                  break;
               case 66:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(68, 72);
                  break;
               case 68:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(68, 72);
                  break;
               case 71:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(73, 77);
                  break;
               case 73:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAddStates(73, 77);
                  break;
               case 74:
                  if ((0x47ffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(65, 68);
                  break;
               case 76:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAdd(76);
                  break;
               case 77:
                  if ((0x78000001f8000001L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 89:
                  if (curChar == 124 && kind > 60)
                     kind = 60;
                  break;
               case 90:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 93:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjAddStates(81, 82);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 76:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAdd(76);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 58)
                     kind = 58;
                  break;
               case 4:
               case 5:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(13, 15);
                  break;
               case 12:
               case 13:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(16, 18);
                  break;
               case 93:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjAddStates(81, 82);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 104 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 0;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x20000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 56;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0)
{
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa1_2(0x20000000000L);
      default :
         return jjMoveNfa_2(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_2(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa2_2(active0, 0x20000000000L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0);
}
private final int jjMoveStringLiteralDfa2_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 123:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(2, 41);
         break;
      default :
         break;
   }
   return jjStartNfa_2(1, active0);
}
private final int jjMoveNfa_2(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 104;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(75);
                  }
                  else if ((0xfc00fffe00000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(83, 85);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(86, 90);
                  }
                  if (curChar == 61)
                     jjCheckNAddStates(91, 96);
                  else if (curChar == 13)
                     jjAddStates(97, 101);
                  else if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 42)
                  {
                     if (kind > 51)
                        kind = 51;
                  }
                  else if (curChar == 35)
                     jjCheckNAdd(3);
                  if (curChar == 61)
                  {
                     if (kind > 46)
                        kind = 46;
                  }
                  break;
               case 1:
                  if (kind > 42)
                     kind = 42;
                  break;
               case 2:
                  if (curChar == 35)
                     jjCheckNAdd(3);
                  break;
               case 3:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjCheckNAdd(4);
                  break;
               case 7:
               case 8:
                  jjCheckNAddStates(102, 104);
                  break;
               case 12:
               case 13:
                  jjCheckNAddStates(16, 18);
                  break;
               case 15:
                  if (curChar == 42 && kind > 51)
                     kind = 51;
                  break;
               case 18:
                  if (curChar == 44 && kind > 51)
                     kind = 51;
                  break;
               case 19:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if ((0x3ff680000000000L & l) != 0L)
                     jjAddStates(19, 20);
                  break;
               case 22:
                  if (curChar == 58)
                     jjAddStates(21, 24);
                  break;
               case 23:
                  if (curChar != 47)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(25, 32);
                  break;
               case 24:
                  if ((0x2fff7fd200000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 25:
                  if (curChar == 37)
                     jjCheckNAdd(26);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 29:
                  if (curChar == 37)
                     jjCheckNAdd(30);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(36, 41);
                  break;
               case 32:
                  if ((0x2bff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(36, 41);
                  break;
               case 33:
                  if (curChar == 58)
                     jjCheckNAdd(34);
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(42, 45);
                  break;
               case 35:
                  if (curChar != 47)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(46, 50);
                  break;
               case 36:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(46, 50);
                  break;
               case 39:
                  if ((0x2fff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(46, 50);
                  break;
               case 40:
                  if (curChar != 63)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(51, 53);
                  break;
               case 41:
                  if ((0xafffffd200000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(51, 53);
                  break;
               case 42:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(51, 53);
                  break;
               case 45:
                  if (curChar != 35)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 46:
                  if ((0xafffffd200000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 47:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 50:
                  if (curChar == 37)
                     jjCheckNAddTwoStates(26, 30);
                  break;
               case 51:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 52:
                  if (curChar != 47)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(54, 57);
                  break;
               case 53:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(58, 62);
                  break;
               case 56:
                  if ((0x2fff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(58, 62);
                  break;
               case 57:
                  if (curChar != 47)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(63, 67);
                  break;
               case 58:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(63, 67);
                  break;
               case 61:
                  if ((0x2fff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(63, 67);
                  break;
               case 62:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(65, 68);
                  break;
               case 65:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(68, 72);
                  break;
               case 68:
                  if ((0x2bff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(68, 72);
                  break;
               case 69:
                  if (curChar != 47)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(73, 77);
                  break;
               case 70:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(73, 77);
                  break;
               case 73:
                  if ((0x2fff7fd200000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(73, 77);
                  break;
               case 74:
                  if ((0x2fff7fd200000000L & l) != 0L)
                     jjCheckNAddTwoStates(65, 68);
                  break;
               case 75:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(75);
                  break;
               case 76:
                  if ((0xfc00fffe00000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 77:
                  if (curChar == 13)
                     jjAddStates(97, 101);
                  break;
               case 78:
                  if (curChar == 10)
                     jjCheckNAdd(79);
                  break;
               case 79:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(79, 80);
                  break;
               case 80:
                  if ((0x40800000000L & l) != 0L)
                     jjCheckNAdd(81);
                  break;
               case 81:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjCheckNAdd(81);
                  break;
               case 82:
                  if (curChar == 10)
                     jjCheckNAdd(84);
                  break;
               case 85:
                  if (curChar == 10)
                     jjCheckNAdd(2);
                  break;
               case 86:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(87, 88);
                  break;
               case 87:
               case 89:
                  if (curChar == 61 && kind > 46)
                     kind = 46;
                  break;
               case 88:
                  if (curChar == 61)
                     jjCheckNAddStates(105, 107);
                  break;
               case 90:
               case 92:
                  if (curChar == 61)
                     jjCheckNAdd(89);
                  break;
               case 91:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 93:
                  if (curChar == 10 && kind > 53)
                     kind = 53;
                  break;
               case 94:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(86, 90);
                  break;
               case 95:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(83, 85);
                  break;
               case 96:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(96);
                  break;
               case 99:
                  if (curChar == 61)
                     jjCheckNAddStates(91, 96);
                  break;
               case 100:
                  if (curChar == 61 && kind > 48)
                     kind = 48;
                  break;
               case 101:
               case 103:
                  if (curChar == 61)
                     jjCheckNAdd(100);
                  break;
               case 102:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffffffffffeL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  else if (curChar == 124)
                     jjCheckNAddTwoStates(83, 98);
                  else if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 16;
                  if ((0x87fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(75);
                  }
                  else if ((0x78000001f8000001L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                  }
                  if ((0xc0000000L & l) != 0L)
                  {
                     if (kind > 51)
                        kind = 51;
                  }
                  else if (curChar == 96)
                     jjCheckNAddStates(16, 18);
                  else if (curChar == 91)
                     jjCheckNAddStates(102, 104);
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (kind > 42)
                     kind = 42;
                  break;
               case 3:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjAddStates(108, 109);
                  break;
               case 5:
                  if (curChar == 91)
                     jjCheckNAddStates(102, 104);
                  break;
               case 6:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 7:
                  jjCheckNAddStates(102, 104);
                  break;
               case 8:
                  if ((0xffffffffdfffffffL & l) != 0L)
                     jjCheckNAddStates(102, 104);
                  break;
               case 9:
                  if (curChar == 93 && kind > 47)
                     kind = 47;
                  break;
               case 10:
                  if (curChar == 96)
                     jjCheckNAddStates(16, 18);
                  break;
               case 11:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  jjCheckNAddStates(16, 18);
                  break;
               case 13:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     jjCheckNAddStates(16, 18);
                  break;
               case 14:
                  if (curChar == 96 && kind > 50)
                     kind = 50;
                  break;
               case 15:
                  if ((0xc0000000L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 16:
                  if (curChar == 126 && kind > 51)
                     kind = 51;
                  break;
               case 17:
                  if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 20:
               case 21:
                  if ((0x7fffffffffffffeL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  break;
               case 24:
                  if ((0x47fffffffffffffeL & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 27:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 28:
                  if (curChar != 64)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(36, 41);
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(36, 41);
                  break;
               case 32:
                  if ((0x47fffffffffffffeL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(36, 41);
                  break;
               case 37:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(46, 50);
                  break;
               case 39:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(46, 50);
                  break;
               case 41:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(51, 53);
                  break;
               case 43:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 44:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(51, 53);
                  break;
               case 46:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 48:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddTwoStates(46, 47);
                  break;
               case 54:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 55:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(58, 62);
                  break;
               case 56:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(58, 62);
                  break;
               case 59:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 60:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(63, 67);
                  break;
               case 61:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(63, 67);
                  break;
               case 63:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(65, 68);
                  break;
               case 66:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(68, 72);
                  break;
               case 68:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(68, 72);
                  break;
               case 71:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(73, 77);
                  break;
               case 73:
                  if ((0x47ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(73, 77);
                  break;
               case 74:
                  if ((0x47ffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(65, 68);
                  break;
               case 75:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(75);
                  break;
               case 76:
                  if ((0x78000001f8000001L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 83:
                  if (curChar == 124 && kind > 44)
                     kind = 44;
                  break;
               case 84:
                  if (curChar == 124)
                     jjCheckNAdd(83);
                  break;
               case 97:
                  if (curChar == 124)
                     jjCheckNAddTwoStates(83, 98);
                  break;
               case 98:
                  if (curChar == 124 && kind > 49)
                     kind = 49;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 75:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(75);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 42)
                     kind = 42;
                  break;
               case 3:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjAddStates(108, 109);
                  break;
               case 7:
               case 8:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(102, 104);
                  break;
               case 12:
               case 13:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(16, 18);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 104 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x4L) != 0L)
            return 5;
         if ((active0 & 0x2L) != 0L)
            return 9;
         return -1;
      case 1:
         if ((active0 & 0x4L) != 0L)
            return 4;
         if ((active0 & 0x2L) != 0L)
            return 8;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa1_0(0x2L);
      case 125:
         return jjMoveStringLiteralDfa1_0(0x4L);
      default :
         return jjMoveNfa_0(11, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa2_0(active0, 0x2L);
      case 125:
         return jjMoveStringLiteralDfa2_0(active0, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 123:
         if ((active0 & 0x2L) != 0L)
            return jjStopAtPos(2, 1);
         break;
      case 125:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(2, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 11;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 11:
               case 2:
               case 1:
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               case 9:
               case 8:
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               case 5:
               case 4:
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 11:
                  if ((0xd7ffffffffffffffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAddStates(110, 115);
                  }
                  else if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if (curChar == 125)
                     jjstateSet[jjnewStateCnt++] = 5;
                  if (curChar == 123)
                     jjCheckNAdd(8);
                  else if (curChar == 125)
                     jjCheckNAdd(4);
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 9:
                  if ((0xf7ffffffffffffffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAddStates(110, 115);
                  }
                  else if (curChar == 123)
                     jjCheckNAdd(8);
                  break;
               case 5:
                  if ((0xdfffffffffffffffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAddStates(110, 115);
                  }
                  else if (curChar == 125)
                     jjCheckNAdd(4);
                  break;
               case 0:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               case 2:
                  if ((0xd7ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               case 3:
                  if (curChar == 125)
                     jjCheckNAdd(4);
                  break;
               case 4:
                  if ((0xdfffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               case 6:
                  if (curChar == 125)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 123)
                     jjCheckNAdd(8);
                  break;
               case 8:
                  if ((0xf7ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               case 10:
                  if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 11:
               case 2:
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               case 9:
               case 8:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               case 5:
               case 4:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(110, 115);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 11 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   85, 90, 92, 96, 97, 84, 88, 91, 95, 102, 81, 82, 79, 3, 5, 6, 
   11, 13, 14, 21, 22, 51, 52, 62, 74, 24, 28, 32, 33, 35, 40, 45, 
   50, 25, 24, 28, 29, 32, 33, 35, 40, 45, 34, 35, 40, 45, 35, 36, 
   39, 40, 45, 41, 42, 45, 53, 56, 40, 45, 53, 56, 57, 40, 45, 57, 
   58, 61, 40, 45, 65, 68, 69, 40, 45, 69, 70, 73, 40, 45, 100, 101, 
   98, 93, 94, 79, 80, 96, 79, 84, 2, 87, 88, 91, 92, 89, 102, 103, 
   100, 78, 82, 85, 86, 93, 6, 8, 9, 91, 92, 89, 3, 4, 0, 2, 
   3, 6, 7, 10, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default : 
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
public static final String[] jjstrLiteralImages = {
"", "\173\173\173", "\175\175\175", null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, "\173\173\173", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, "\173\173\173", null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, };
public static final String[] lexStateNames = {
   "VERBATIM_CONTEXT", 
   "DEFAULT", 
   "INITIAL_CONTEXT", 
};
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 
   1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[104];
private final int[] jjstateSet = new int[208];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public GWikiScannerTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public GWikiScannerTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 104; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 3 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         t.image = "";
      else
         t.image = image.toString();
      t.beginLine = t.endLine = input_stream.getBeginLine();
      t.beginColumn = t.endColumn = input_stream.getBeginColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      t.image = (im == null) ? input_stream.GetImage() : im;
      t.beginLine = input_stream.getBeginLine();
      t.beginColumn = input_stream.getBeginColumn();
      t.endLine = input_stream.getEndLine();
      t.endColumn = input_stream.getEndColumn();
   }
   return t;
}

int curLexState = 1;
int defaultLexState = 1;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 53;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[1]);
                                          verbatimBlockDepth++;
         break;
      case 2 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[2]);
            verbatimBlockDepth--;
            if (verbatimBlockDepth == 0)  {
                SwitchTo(INITIAL_CONTEXT);
            } else {
                SwitchTo(VERBATIM_CONTEXT);
            }
         break;
      case 41 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[41]);
                                  verbatimBlockDepth++;
         break;
      case 57 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[57]);
                                  verbatimBlockDepth++;
         break;
      default : 
         break;
   }
}
}
